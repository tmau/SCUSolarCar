    Control code for the main arduino driving 'Big Red'
    
    Scheme - used a finite state machine controlled by the global variable 'state' all states other than a, b, l, and e return to a at the end of their run
      a - arbiter checks ping sensors, if inside the threshold goes to 's' else goes to 'g'
      g - gps code calculates current heading, desired heading, and then a turn angle get the char on track.
          turns servo accordingly.
      s - sensor response code which turns teh car and slows it down based on which ping sensors were triggered
      l - line follow mode is used at the end of the journey to guide Big Red back into the charge station
      b - beginning code. Backs out of the docking station and gets a gps heading
      e - end code. stops the car and delays it for a charge period      

      The car runs from different preprogrammed way points. Once it hits the last waypoint it returns to the charge station and
      turns on line follow mode. There will be lines that catch the car and guide it into the docking station.
     
     The gps uses the gps library TinyGPS to get current position and desired headings between two sets of longitude and latitude points.
     The waypoint sets are created using Google Earth polygons and a parsing program which will be included in the file. These points are 
     pushed onto a stack which pops them off each time a waypoint is hit. 
   
     This project includes code written by Brad Ydens, Fred Feyzi, Peter Stephens, and Stan Whitcomb 
     
     --------------- known issues -------------------
     
     Currently all the drive functions are created for Pulse Width Modulation, however our H-bridge 
     uses power MOSFET's, which do not do well with the rapid switches of PWM. Established a work
     around which uses digitalWrite to just turn them on and pour energy into them. 
     
     GPS does not work in the function given for some unknown reason. If put in the main code should
     function correctly, have not tested.
    
    Sensor code is really sensitive, and I had to manually add correction code because the gps code does
    not work and the car cannot correct itself. Also the servo degree is subject to a lot of fluxuation. 
    73 is close to center but not exactly there.  
      
    Car cannot back up. The motor either is not strong enough or some other problem, but beware of backing
    up. 
    
